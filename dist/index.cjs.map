{"version":3,"file":"index.cjs","sources":["../lib/IdentityClient.js","../lib/TokenClient.js","../lib/TasksClient.js","../lib/index.js"],"sourcesContent":["/**\n * The IdentityClient class. Uses an Access Token to find the Org and Project Identity to which it belongs.\n */\nclass IdentityClient {\n  constructor (apiHost) {\n    this.apiHost = apiHost\n  }\n\n  /**\n   * Returns the Org and Project ID for a given access token.\n   * @param accessToken An access token\n   * @return {object}\n   */\n  async GetIdentity (accessToken) {\n    if (!accessToken) {\n      throw new Error(\n        'cannot get identity, expected access token to not be empty'\n      )\n    }\n    const res = await fetch(`https://${this.apiHost}/api/v1/whoami`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    })\n    if (res.status !== 200) {\n      throw new Error(\n        `cannot get identity, expected 200 but got ${res.status}: ${res.statusText}`\n      )\n    }\n    const details = await res.json()\n    if (!details.client) {\n      throw new Error(\n        'cannot get identity, expected response to contain client details'\n      )\n    }\n    return details.client\n  }\n}\n\nexport default IdentityClient\n","/**\n * The TokenClient class. Performs a Client Credentials OAuth2 Grant for an given Client ID and Secret.\n */\nclass TokenClient {\n  constructor (authHost, clientID, clientSecret) {\n    this.authHost = authHost\n  }\n\n  /**\n   * Create an Access Token\n   * @param clientID The OAuth Client App ID.\n   * @param clientSecret The OAuth Client App Secret.\n   * @return {string}\n   */\n  async Create (clientID, clientSecret) {\n    const res = await fetch(`https://${this.authHost}/oauth2/token`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Basic ${this.getBasicAuthorizationHeader(clientID, clientSecret)}`\n      },\n      body: this.getFormDataWithGrantType('client_credentials')\n    })\n    if (res.status !== 200) {\n      throw new Error(\n        `cannot create token, expected 200 but got ${res.status}: ${res.statusText}`\n      )\n    }\n    const data = await res.json()\n    if (!data.access_token) {\n      throw new Error(\n        'cannot create token, expected response to contain access token'\n      )\n    }\n    return data.access_token\n  }\n\n  /**\n   * @private\n   */\n  getBasicAuthorizationHeader (clientID, clientSecret) {\n    return btoa(`${clientID}:${clientSecret}`)\n  }\n\n  /**\n   * @private\n   */\n  getFormDataWithGrantType (grantType) {\n    const formData = new FormData()\n    formData.append('grant_type', grantType)\n    return formData\n  }\n}\n\nexport default TokenClient\n","const maxTaskInputLength = 128000\n\n/**\n * The TasksClient class. Performs various Tasks CRUD operations against the Rightbrain AI API.\n */\nclass TasksClient {\n  constructor (tokenClient, identityClient, apiHost, clientID, clientSecret) {\n    this.tokenClient = tokenClient\n    this.identityClient = identityClient\n    this.apiHost = apiHost\n    this.clientID = clientID\n    this.clientSecret = clientSecret\n  }\n\n  /**\n   * Creates a new Task\n   * @param definition A task definition as required by the API\n   * @return {object}\n   */\n  async Create (definition) {\n    const accessToken = await this.tokenClient.Create(this.clientID, this.clientSecret)\n    const response = await fetch(await this.getTaskCreateURL(accessToken), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(definition)\n    })\n    if (response.status !== 200) {\n      throw new Error(\n        `Error creating Task, expected status code of 200, but got ${response.status}: ${response.statusText}`\n      )\n    }\n    return await response.json()\n  }\n\n  /**\n   * Runs a Task\n   * @param taskID The ID of the Task to be ran.\n   * @param taskInput The Task Input required by the Task.\n   * @param taskRevision If supplied, the revision of the Task to be ran.\n   * @return {object}\n   */\n  async Run (taskID, taskInput, taskRevision) {\n    const data = JSON.stringify(taskInput)\n    this.assertTaskInputSize(data)\n    const accessToken = await this.authClient.CreateToken()\n    const response = await fetch(await this.getTaskRunURL(accessToken, taskID, taskRevision), {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      },\n      body: this.getTaskInputFormData(data)\n    })\n    if (response.status !== 200) {\n      throw new Error(\n        `Error running Task, expected status code of 200, but got ${response.status}: ${response.statusText}`\n      )\n    }\n    return await response.json()\n  }\n\n  /**\n   * @private\n   */\n  async getTaskCreateURL (accessToken) {\n    const identity = await this.getIdentity(accessToken)\n    return `https://${this.apiHost}/api/v1/org/${identity.org_id}/project/${identity.project_id}/task`\n  }\n\n  /**\n   * @private\n   */\n  async getTaskRunURL (accessToken, taskID, taskRevision) {\n    const identity = await this.getIdentity(accessToken)\n    let url = `https://${this.apiHost}/api/v1/org/${identity.org_id}/project/${identity.project_id}/task/${taskID}/run`\n    if (taskRevision) {\n      url += `?revision=${taskRevision}`\n    }\n    return url\n  }\n\n  /**\n   * @private\n   */\n  assertTaskInputSize (taskInput) {\n    if (taskInput.length > maxTaskInputLength) {\n      throw new Error(`Error running task, max task input is ${maxTaskInputLength} but input was ${taskInput.length}`)\n    }\n  }\n\n  /**\n   * @private\n   */\n  getTaskInputFormData (taskInput) {\n    const formData = new FormData()\n    formData.append('task_input', taskInput)\n    return formData\n  }\n\n  /**\n   * @private\n   */\n  async getIdentity (accessToken) {\n    if (!this.cachedIdentity) {\n      this.cachedIdentity = await this.identityClient.GetIdentity(accessToken)\n    }\n    return this.cachedIdentity\n  }\n}\n\nexport default TasksClient\n","import IdentityClient from './IdentityClient.js'\nimport TokenClient from './TokenClient.js'\nimport TasksClient from './TasksClient.js'\n\nconst defaultTasksClientOptions = {\n  apiHost: 'app.rightbrain.ai',\n  authHost: 'oauth.rightbrain.ai',\n  clientID: null,\n  clientSecret: null\n}\n\n/**\n * Creates a new Tasks Client\n * @param options An object of options to replace the defaults.\n * @return {object}\n */\nfunction NewDefaultTasksClient (options) {\n  options = { ...defaultTasksClientOptions, ...options }\n  const identityClient = new IdentityClient(options.apiHost)\n  const tokenClient = new TokenClient(options.authHost)\n  return new TasksClient(tokenClient, identityClient, options.apiHost, options.clientID, options.clientSecret)\n}\n\nexport { NewDefaultTasksClient }\n"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","_regeneratorRuntime","IdentityClient","apiHost","_classCallCheck","_createClass","key","_GetIdentity","_asyncToGenerator","mark","_callee","accessToken","res","details","wrap","_callee$","_context","prev","next","Error","fetch","concat","method","headers","Authorization","sent","status","statusText","json","client","abrupt","stop","GetIdentity","_x","TokenClient","authHost","clientID","clientSecret","_Create","_callee2","data","_callee2$","_context2","getBasicAuthorizationHeader","body","getFormDataWithGrantType","access_token","Create","_x2","_x3","btoa","grantType","formData","FormData","append","maxTaskInputLength","TasksClient","tokenClient","identityClient","_Create2","_callee3","definition","response","_callee3$","_context3","t0","getTaskCreateURL","t1","t2","JSON","stringify","_x4","_Run","_callee4","taskID","taskInput","taskRevision","_callee4$","_context4","assertTaskInputSize","authClient","CreateToken","getTaskRunURL","getTaskInputFormData","Run","_x5","_x6","_x7","_getTaskCreateURL","_callee5","identity","_callee5$","_context5","getIdentity","org_id","project_id","_x8","_getTaskRunURL","_callee6","url","_callee6$","_context6","_x9","_x10","_x11","_getIdentity","_callee7","_callee7$","_context7","cachedIdentity","_x12","defaultTasksClientOptions","NewDefaultTasksClient","options"],"mappings":"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"}